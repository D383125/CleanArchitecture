name: Docker Image CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout source code
      uses: actions/checkout@v4

    # Step 2: Setup .NET Core
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'

    # Step 3: Restore dependencies
    - name: Restore dependencies
      run: dotnet restore CleanArch.sln

    # Step 4: Build the .NET application
    - name: Build the application
      run: dotnet build CleanArch.sln --configuration Release --no-restore

    # Step 5: Test
    - name: Test the application
      run: dotnet test .\tests\Application.UnitTests\Application.UnitTests.csproj

    # Step 5: Publish the .NET application
    - name: Publish the application
      run: dotnet publish CleanArch.sln --configuration Release --output publish

    # Step 6: Build Docker images
    - name: Build Docker images
      run: docker compose build  

    # Step 7: Tag webapp image
    - name: Tag WebApp image
      run: docker tag webapp:dev breen25/webapp:latest
    
    #Step 8: Tag postgres image
    - name: Tag postgres image
      run: docker tag postgres:15 breen25/postgres:latest

      #Step 9
    - name: Tag Nginx Reverse Proxy
      run: docker tag nginx:latest breen25/nginx:latest

#TODO: Add docker token and username
    # Optional: Push the Docker images to a registry
    #- name: Log in to DockerHub
    #  uses: docker/login-action@v2
    #  with:
    #    username: ${{ secrets.DOCKER_USERNAME }}
    #    password: ${{ secrets.DOCKER_PASSWORD }}

    #- name: Push webapp image
    #  run: docker push breen25/webapp:latest

    #- name: Push postgres image
    #  run: docker push breen25/postgres:latest

    #- name: Push PNginx image
    #  run: docker push breen25/nginx:latest

